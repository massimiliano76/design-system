import{openBlock as e,createBlock as t,renderSlot as n,withDirectives as o,createVNode as a,vModelCheckbox as l}from"vue";var s={props:{disabled:{type:Boolean,default:!1},modelValue:{type:Boolean,default:!1}},emits:["update:modelValue"],computed:{checkedValue:{get(){return this.modelValue},set(e){this.$emit("update:modelValue",e)}}}};const i=a("span",{class:"toggle__switch"},null,-1);!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===n&&o.firstChild?o.insertBefore(a,o.firstChild):o.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}('/* base COLORS --------------------------------------------- */\n/* brand colors */\n/* variant colors */\n/* common colors */\n/* state colors */\n/* base FONT SIZE ----------------------------------------- */\n/* base BOX-SHADOW ----------------------------------------- */\n/* base SPACING UNIT -------------------------------------- */\n/* base FONTS -------------------------------------- */\n.toggle__button {\n  vertical-align: middle;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n}\n.toggle__button > div {\n  display: inline-block;\n}\n.toggle__button input[type=checkbox] {\n  opacity: 0;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n}\n.toggle__button .toggle__switch {\n  display: inline-block;\n  height: 11px;\n  border-radius: 10px;\n  width: 24px;\n  background: rgba(193, 193, 193, 0.39);\n  position: relative;\n  margin: 0 16px;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n}\n.toggle__button .toggle__switch::after {\n  content: "";\n  position: absolute;\n  display: block;\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  left: -5px;\n  top: -2px;\n  -webkit-transform: translateX(0);\n          transform: translateX(0);\n  -webkit-transition: all 0.25s cubic-bezier(0.5, -0.6, 0.5, 1.6);\n  transition: all 0.25s cubic-bezier(0.5, -0.6, 0.5, 1.6);\n}\n.toggle__button .toggle__switch::after {\n  background: white;\n  -webkit-box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.15);\n          box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.15);\n}\n.toggle__button.active .toggle__switch {\n  -webkit-box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.15);\n          box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.15);\n}\n.toggle__button.active .toggle__switch::after {\n  left: 0;\n  background: #2f374a;\n  -webkit-box-shadow: 0 0 1px #2f374a;\n          box-shadow: 0 0 1px #2f374a;\n  -webkit-transform: translateX(16px);\n          transform: translateX(16px);\n}\n.toggle__button.active.disabled .toggle__switch::after {\n  background-color: #95989a;\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none;\n}\n.toggle__button.disabled {\n  cursor: default;\n}\n.toggle__button.disabled span {\n  color: #bdbdbd;\n}\n.toggle__button.disabled .toggle__switch::after {\n  border: 1px solid #95989a;\n  -webkit-box-shadow: none;\n          box-shadow: none;\n}'),s.render=function(s,d,r,b,g,c){return e(),t("label",{for:"bimdata-toggle-"+s._uid,class:[{active:r.modelValue,disabled:r.disabled},"toggle__button"]},[n(s.$slots,"default"),o(a("input",{type:"checkbox",disabled:r.disabled,id:"bimdata-toggle-"+s._uid,"onUpdate:modelValue":d[1]||(d[1]=e=>c.checkedValue=e)},null,8,["disabled","id"]),[[l,c.checkedValue]]),i,n(s.$slots,"right")],10,["for"])},s.__file="src/BIMDataComponents/BIMDataToggle/BIMDataToggle.vue";export default s;
